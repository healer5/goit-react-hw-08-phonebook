{"version":3,"file":"static/js/984.64e337e7.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.jsx","redux/contacts/contactsSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactItems = styled.li`\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-left: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  background-color: ${p => p.theme.colors.white};\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.sm};\n  box-shadow: inset 0 0 10px 5px rgba(0, 0, 0, 0.3);\n  opacity: 0.9;\n`;\n\nexport const ListButton = styled.button`\n  margin-left: ${p => p.theme.space[6]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n  &:hover {\n    background-color: ${p => p.theme.colors.primary};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { ListButton } from '../ContactList/ContactList.styled';\nimport { Box } from '../Box';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const [deletingItem, setDeletingItem] = useState('');\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    setDeletingItem(id);\n  };\n\n  useEffect(() => {\n    if (!isLoading) {\n      setDeletingItem('');\n    }\n  }, [isLoading]);\n\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\">\n      <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\n        <Box as=\"span\" width=\"300px\">\n          {name}\n        </Box>\n        <span>{number}</span>\n      </Box>\n      <ListButton type=\"button\" onClick={handleDelete}>\n        {deletingItem === id ? (\n          <Box as=\"span\" color=\"#8f4f40\" fontWeight=\"bold\">\n            Deleting...\n          </Box>\n        ) : (\n          <span>Delete</span>\n        )}\n      </ListButton>\n    </Box>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectContacts,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { ContactItems } from './ContactList.styled';\nimport { Loader } from '../Loader';\nimport { Box } from 'components/Box';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilterContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLocaleLowerCase();\n    const filterContacts = contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n    return filterContacts;\n  };\n  const filteredContacts = getFilterContacts();\n\n  return (\n    <div>\n      <Box mb={3}>{isLoading && <Loader />}</Box>\n      {contacts.length > 0 && (\n        <ul>\n          {filteredContacts.map(contact => (\n            <ContactItems key={contact.id}>\n              <ContactItem\n                name={contact.name}\n                number={contact.number}\n                id={contact.id}\n              />\n            </ContactItems>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormContacts = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[3]}px;\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.md};\n  box-shadow: inset 0 0 10px 5px rgba(0, 0, 0, 0.3);\n  opacity: 0.9;\n  & p {\n    color: ${p => p.theme.colors.secondary};\n    font-size: ${p => p.theme.fontSizes.l};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const FormLabelContacts = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.secondary};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const InputForm = styled.input`\n  width: ${p => p.theme.space[7]}px;\n  height: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.sm};\n  borders: ${p => p.theme.borders.normal};\n  font-size: ${p => p.theme.fontSizes.m};\n  align-items: center;\n  &:hover {\n    box-shadow: inset 0 0 10px 5px rgba(0, 0, 0, 0.3);\n  }\n`;\nexport const Button = styled.button`\n  width: ${p => p.theme.space[6]}px;\n  align-items: center;\n  padding: ${p => p.theme.space[2]}px;\n  margin-top: ${p => p.theme.space[3]}px;\n  background-color: ${p => p.theme.colors.background};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.secondary};\n  font-size: ${p => p.theme.fontSizes.s};\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.sm};\n  box-shadow: inset 0 0 10px 5px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  &:hover {\n    background-color: ${p => p.theme.colors.primary};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport {\n  FormContacts,\n  FormLabelContacts,\n  InputForm,\n  Button,\n} from './ContactForm.styled';\nimport { toast } from 'react-toastify';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        // break;\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isExistContact = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n    if (isExistContact) {\n      toast.error(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    toast.success('Successfully added contact!');\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormContacts onSubmit={handleSubmit}>\n      <p>Enter your contact</p>\n      <FormLabelContacts>\n        Name\n        <InputForm\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n          placeholder=\"\"\n        />\n      </FormLabelContacts>\n      <FormLabelContacts>\n        Number\n        <InputForm\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n          placeholder=\"\"\n        />\n      </FormLabelContacts>\n      <Button type=\"submit\">Add contact</Button>\n    </FormContacts>\n  );\n};\n","// import styled from 'styled-components';\n\n// export const Label = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 20px;\n// `;\n\n// export const Input = styled.input`\n//   width: 220px;\n//   border-radius: 4px;\n//   cursor: pointer;\n//   height: 20px;\n//   margin: 0 auto;\n//   cursor: pointer;\n//   :hover,\n//   :focus {\n//     outline: 1px solid #73372a;\n//   }\n// `;\nimport styled from 'styled-components';\n\nexport const FilterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${p => p.theme.space[2]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[4]}px;\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.md};\n  box-shadow: inset 0 0 10px 5px rgba(0, 0, 0, 0.3);\n  opacity: 0.9;\n  width: 400px;\n  & p {\n    color: ${p => p.theme.colors.secondary};\n    font-size: ${p => p.theme.fontSizes.l};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.secondary};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const FilterInput = styled.input`\n  width: ${p => p.theme.space[7]}px;\n  height: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.sm};\n  borders: ${p => p.theme.borders.normal};\n  font-size: ${p => p.theme.fontSizes.m};\n  align-items: center;\n  &:hover {\n    box-shadow: inset 0 0 10px 5px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { getVisibleContacts } from 'redux/contacts/filterSlice';\nimport { FilterForm, FilterLabel, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    if (e.target.name === 'filter') {\n      dispatch(getVisibleContacts(e.target.value));\n    }\n  };\n\n  return (\n    <FilterForm>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          id=\"filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </FilterLabel>\n    </FilterForm>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { Filter } from 'components/Filter/Filter';\nimport { Box } from 'components/Box';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box display=\"flex\" justifyContent=\"space-evenly\" p={4} gridGap={4}>\n      <div>\n        <ContactForm />\n        <Filter />\n      </div>\n      <ContactList />\n    </Box>\n  );\n}","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n"],"names":["ContactItems","styled","p","theme","space","colors","white","text","fontWeights","bold","fontSizes","m","borders","normal","radii","sm","ListButton","primary","ContactItem","name","number","id","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","useState","deletingItem","setDeletingItem","useEffect","Box","display","justifyContent","width","as","type","onClick","deleteContact","color","fontWeight","ContactList","contacts","selectContacts","filter","selectFilter","fetchContacts","filteredContacts","normalizedFilter","toLocaleLowerCase","includes","getFilterContacts","mb","Loader","length","map","contact","FormContacts","md","secondary","l","FormLabelContacts","InputForm","Button","background","s","ContactForm","setName","setNumber","handleChange","e","currentTarget","value","onSubmit","preventDefault","find","toast","addContact","pattern","title","required","onChange","placeholder","FilterForm","FilterLabel","FilterInput","Filter","target","getVisibleContacts","Tasks","gridGap","state","items"],"sourceRoot":""}